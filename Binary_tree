#include<stdio.h>
#include<malloc.h>
struct node
{int data;
    struct node *left;
    struct node *right;
};
struct node *root;
struct node* insert()
{
    struct node *temp,*p,*r;
    temp=(struct node *)malloc(sizeof(struct node));
        int a;
        printf("Enter element to be inserted in node\n");
        scanf("%d",&a);
        temp->data=a;
        temp->left=NULL;
        temp->right=NULL;
        if(root==NULL)
        {root=temp;
        return root;}
        else
        {p=root;
        while(p!=NULL)
        {
            r=p;
            if(p->data==a)
            {
                printf("Element already exist in the node\n");
                return;}
            else if(p->data<a)
                    p=p->right;
            else
                p=p->left;
        }
        if(r->data>a)
            r->left=temp;
        else
            r->right=temp;
        }
return root;}
void preorder(struct node *root)
{
    if(root==NULL)
        return ;
        printf("%d ",root->data);
        preorder(root->left);
        preorder(root->right);
}

void inorder(struct node *root)
{
    if(root==NULL)
        return ;
        inorder(root->left);
        printf("%d ",root->data);
        inorder(root->right);
}

void postorder(struct node *root)
{
    if(root==NULL)
        return ;
       postorder(root->left);
        postorder(root->right);
         printf("%d ",root->data);
}
void printLevelOrder(struct node* root)
{
    int h = height(root);
    int i;
    for (i=1; i<=h+1; i++)
    {
        printGivenLevel(root, i);
        printf("\n");
    }
}
int max(int a,int b)
{
    if(a>b)return a;
    else return b;
}
int height(struct node* root) {
        if(root==NULL)
            return -1;
        int leftheight=height(root->left);
        int rightheight=height(root->right);
        return (max(leftheight,rightheight)+1);
    }
void printGivenLevel(struct node* root, int level)
{
    if (root == NULL)
        return;
    if (level == 1)
        printf("%d ", root->data);
    else if (level > 1)
    {
        printGivenLevel(root->left, level-1);
        printGivenLevel(root->right, level-1);
    }
}
int main()

{int choice;
char ch='y';
root=NULL;
while(ch=='y'||ch=='Y')
{system("cls");
    printf("Enter Your choice\n");
printf("1.Insertion n elements into node\n");
printf("2.node Traversal-preorder\n");
printf("3.node Traversal-inorder\n");
printf("4.node Traversal-postorder\n");
printf("5.Level order traversal\n");
scanf("%d",&choice);
if(choice==1)
{int n;
printf("Numbr of elements\n");
scanf("%d",&n);
int i;
for(i=0; i<n; i++)
   {root=insert();}
}
else if(choice==2)
    preorder(root);
else if(choice==3)
    inorder(root);
else if(choice==4)
    postorder(root);
    else if(choice==5)
        printLevelOrder(root);
else
    printf("Wrong choice\n");
printf("\nDo you want to continue(y/n)\n");
fflush(stdin);
scanf("%c",&ch);}
 return 0;
}
