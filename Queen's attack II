#include <iostream>

using namespace std;


int mod(int x){
    if(x<0){return ((-1)*x);}
    else{return x;}
}

int crossone(int r,int c,int n){
    int levelo=n-1-mod(r-c);;
    return levelo;
}

int crosstwo(int r,int c,int n){
    int levela=r+c-1;
    if(levela>n){return ((2*n)-levela-1);}
    else{return levela-1;}
}

int main()
{
    int n,k,r,c;
    ///n-size of board nXn
    ///k-no of obstacles
    ///r-x-coordinate
    ///c-y-coordinate
    cin>>n>>k;
    cin>>r>>c;
    ///cout<<"Total movements possible="<<(2*n-2+crossone(r,c,n)+crosstwo(r,c,n))<<endl;

    ///INPUT OF K POSITIONS OF OBSTACLES
    ///THEN WE HAVE TO CREATE A TEST FUNCTION OR ALGORITHM TO FILTER OUT ONLY THE NEAREST ONES...REST ALL ARE WASTE
    int x,y;int right,left,top,down;
    int hrmin=r-1;
    int hlmin=n-r;
    int vtmin=n-c;
    int vdmin=c-1;
    for(int i=0;i<k;i++){
        cin>>x>>y;


        if(y==c){
            if(x<r){
                right=r-x-1;
                if(right<hrmin){
                    hrmin=right;
                }
            }
            else if(x>r){
                left=x-r-1;
                if(left<hlmin){
                    hlmin=left;
                }
            }
        }




        if(x==r){
            if(y<c){
                down=c-y-1;
                if(down<vdmin){
                    vdmin=down;
                }
            }
            else if(y>c){
                top=y-c-1;
                if(top<vtmin){
                    vtmin=top;
                }
            }
        }
    }
    int hmin=hlmin+hrmin;///correct horizontal total moves
    int vmin=vdmin+vtmin;
    int total=hmin+vmin;
    cout<<total<<endl;



    ///cout<<hmin<<endl;

    ///NEED PROGRAM TO BLOCK POSITIONS BEYOND THEM

    ///A FUNCTION TO DEFINE THE CATEGORY OF THE OBSTACLE
    ///HORIZONTAL OR VERTICAL
    ///CROSS OR ANTI CROSS
    ///NO EFFECT OBSTACLE
    /*
    for(int i=0;i<k;i++){
        int x,y;
        cin>>x>>y;
        int hleft=0;int hright=0;int vtop=0;int vdown=0;
        ///HORIZONTAL
        if(x==r){
            if(y>c){///RIGHT OF THE QUEEN///
                hleft=(n-1)-(n-(y-1);///TOTAL SPACE FOR MOVEMENT IF OBSTACLE PRESENT IN RIGHT DIRECTION
            }
            else if(y<c){///LEFT OF THE QUEEN///
                hright=n-y-1;///TOTAL SPACE FOR MOVEMENT IF OBSTACLE PRESENT IN LEFT DIRECTION
            }
        }///VERTICAL
        else if(y==c){
            if(x>r){///TOP OF THE QUEEN///
                vtop=(n-1)-(n-(x-1));
            }
            else if(x<r){///DOWN OF THE QUEEN///
                vdown=n-x-1;
            }
        }

    }
    */
    return 0;
}

